version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - my_network

  mongodb:
    image: mongo:5.0
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    networks:
      - my_network

  redis:
    image: redis:6.2
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - my_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my_network
    depends_on:
      - app

  grafana:
      image: grafana/grafana
      container_name: grafana
      ports:
        - "3000:3000"
      networks:
        - my_network
      depends_on:
        - prometheus
  jenkins:
    build: ./jenkins  # Uses the Dockerfile from the /jenkins folder
    container_name: jenkins
    restart: unless-stopped
    privileged: true
    user: root
    ports:
      - "8100:8080"  # Jenkins UI
      - "50000:50000"  # Jenkins agent communication
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    networks:
      - my_network

#  jenkins:
#    image: jenkins/jenkins:lts
#    container_name: jenkins
#    restart: unless-stopped
#    user: root
#    privileged: true
#    ports:
#      - "8100:8080"
#      - "50000:50000"
#    environment:
#      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
#    volumes:
#      - jenkins_home:/var/jenkins_home
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /usr/bin/docker:/usr/bin/docker
#    networks:
#      - my_network



  app:
    build: .
    container_name: springboot-microservices
    restart: always
    depends_on:
      - mysql
      - mongodb
      - redis
      - kafka
      - jenkins
    ports:
      - "8080:8080"
    networks:
      - my_network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/mydb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_MONGODB_URI: mongodb://mongo-db:27017/mydb
      SPRING_DATA_REDIS_HOST: redis-cache
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  jenkins_home:

networks:
  my_network:
    driver: bridge
  monitoring:  # âœ… Added missing monitoring network definition
    driver: bridge